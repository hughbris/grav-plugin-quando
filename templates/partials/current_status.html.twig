{# this partial template expects calendar to be passed in as type ServiceTimes #}
{% set calendar = calendar|default(quando.opening) %}
{% set service_status = (service_status ?: open_hours)|default(calendar.statusAt(date(now))) %} {# TODO: deprecated parameter name and now deprecated parameter, only need calendar passed in but we'll still derive and set this here #}

{% set labels = calendar.getMeta('labels') %}

{# dump(service_status) #}

{% macro niceWindows(schedule, range_symbol, delimiter) -%}
	{% spaceless %}
		{% set output = [] %}
		{% for window in schedule %}
			{% set starts = window.starts|default(window.begins|default(window.opens)) %} {# TODO: remove deprecated property 'opens' #}
			{% set stops = window.stops|default(window.finishes|default(window.shuts)) %} {# TODO: remove deprecated property 'shuts' #}
			{% set output = output|merge([starts ~ range_symbol|default('-') ~ stops]) %}
		{% endfor %}
		{{ output|join(delimiter|default(', '))|trim }}
	{% endspaceless %}
{%- endmacro niceWindows %}

{% macro niceOpenings(schedule, range_symbol, delimiter) -%} {# TODO: deprecated function DO NOT USE #}
    {% import _self as preferred %}
    {{ preferred.niceWindows(schedule, range_symbol, delimiter) }}
{% endmacro niceOpenings %}

{%- import _self as transforms -%}

{% spaceless %}
{% set hours_formatted = calendar.formatSchedule(service_status.schedule, 'g.ia', ['.i']) %}
{% if service_status.available %} {# e.g. "open today o-s[, o-s]" #}
	{{ (labels.available_today ?: 'PLUGIN_QUANDO.AVAILABLE_TODAY')|t|raw }}: {{ transforms.niceWindows(hours_formatted) }}
{% else %}
	{% if service_status.available_later_on_day -%} {# e.g. "open today o-s[,o-s]" #}
		{{ 'PLUGIN_QUANDO.HOURS_TODAY'|t|raw }}: {{ transforms.niceWindows(hours_formatted) }}
	{% else %}
		{% if service_status.until|date('Ymd') == 'now'|date_modify('+1 day')|date('Ymd') %} {# 'tomorrow' #}
			{{ (labels.available_tomorrow ?: 'PLUGIN_QUANDO.AVAILABLE_TOMORROW')|t|raw }}: {{ service_status.until|date('g.ia')|replace({'.00':''}) }}
		{% else %} {# e.g. "next open [date, time]" #}
			{{ (labels.available_next ?: 'PLUGIN_QUANDO.AVAILABLE_NEXT')|t|raw }}: {{ service_status.until|date('D jS, g.ia')|replace({'.00':''}) }} {# FIXME: this pattern isn't internationalised - try using the undocumented filter service_status.until|nicetime(true) #}
		{% endif %}
	{% endif %}
{% endif %}

{# dump(transforms.niceWindows(service_status.debug)) #}
{% endspaceless %}
